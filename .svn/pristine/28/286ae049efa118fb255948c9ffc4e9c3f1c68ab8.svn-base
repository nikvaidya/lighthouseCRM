<!-- ion-input-item-border position="stacked" -->
<!-- ion-input-item-fixed  position="fixed"-->
<!-- null position="floating"-->
<!-- null position="stacked"-->

<!-- <ion-item class="ion-input-item">
    <ion-label position="floating">Number</ion-label>
    <ion-input type="number"></ion-input>
    <div class="input-buttons-container"   *ngIf="numberinput.value">
  
        <button class="input-btn float-right"  ion-button icon-only small
        (click)="cleardata()">
            <ion-icon name="close"></ion-icon>
        </button>
    </div>
  </ion-item> -->
<div *ngIf="numberinput.item_sub_type !='N_TABLE'">
    <ion-item class="{{numberinput.css_class}}">
        <ion-label position="{{numberinput.position}}" [hidden]="frame_type=='TABLE' || frame_type == 'ENTRY_TABLE'">
            {{numberinput.prompt_name}}</ion-label>
        <ion-input type="number" [customMin]="numberinput.from_value" class="text-right"
            [customMax]="numberinput.to_value" maxlength="{{numberinput.item_size}}" id="{{numberinput.item_name}}"
            pattern="{{numberinput.input_pattern}}" [(ngModel)]="numberinput.value"
            [readonly]="numberinput.item_enable_flag && (!(numberinput.item_enable_flag.indexOf(current_page_parameter.MODE)>-1)||(numberinput.item_enable_flag=='F'))"
            [required]="(current_page_parameter.MODE && (numberinput.data_required_flag && 
        (numberinput.data_required_flag.indexOf(current_page_parameter.MODE)>-1)) )
        ||numberinput.data_required_flag=='T' 
        ||numberinput.prompt_name[numberinput.prompt_name.length -1] =='*'" #numberInputname="ngModel"
            name="{{numberinput.item_name}}"
            (ionChange)="numberinput.isValid=numberInputname.valid; numberinput.touched=true;"
            (ionBlur)="numberinput.touched=true;onChange('ionChange',numberInputname)"
            (ngInit)="numberinput.isValid=numberInputname.valid"></ion-input>
        <div class="input-buttons-container"
            *ngIf="numberinput.value && (!(numberinput.item_enable_flag && (!(numberinput.item_enable_flag.indexOf(current_page_parameter.MODE)>-1)||(numberinput.item_enable_flag=='F')))) ">

            <button class="input-btn float-right" ion-button icon-only small (click)="cleardata()">
                <ion-icon name="close"></ion-icon>
            </button>
        </div>


    </ion-item>

    <div class="error" *ngIf="numberInputname.hasError('maxlength')"> {{numberinput.prompt_name}} max
        {{numberinput.item_size}} digit</div>

    <div class="error" *ngIf="numberInputname.hasError('customMin')"> {{numberinput.prompt_name}} should not be less
        {{numberinput.from_value}}
    </div>

    <div class="error" *ngIf="numberInputname.hasError('customMax')"> {{numberinput.prompt_name}} should not be above
        {{numberinput.to_value}}</div>

    <div class="error" *ngIf="numberInputname.hasError('required') && numberinput.touched"> Please Enter
        {{numberinput.prompt_name}}
    </div>

    <div class="error" *ngIf="numberInputname.hasError('pattern')">Invalid Number or Invalid
        Decimal Place</div>
</div>

<div class="table-input-container" *ngIf="numberinput.item_sub_type=='N_TABLE'">
    <ion-input class="table-input text-right" type="Number" [customMin]="numberinput.from_value" 
        [customMax]="numberinput.to_value" maxlength="{{numberinput.item_size}}" id="{{numberinput.item_name}}"
        pattern="{{numberinput.input_pattern}}" [(ngModel)]="numberinput.value"
        [readonly]="numberinput.item_enable_flag && (!(numberinput.item_enable_flag.indexOf(current_page_parameter.MODE)>-1)||(numberinput.item_enable_flag=='F'))"
        [required]="(current_page_parameter.MODE && (numberinput.data_required_flag && 
        (numberinput.data_required_flag.indexOf(current_page_parameter.MODE)>-1)) )
        ||numberinput.data_required_flag=='T' 
        ||numberinput.prompt_name[numberinput.prompt_name.length -1] =='*'" #numberInputname="ngModel"
        name="{{numberinput.item_name}}"
        (ionChange)="numberinput.isValid=numberInputname.valid; numberinput.touched=true;"
        (ionBlur)="numberinput.touched=true;onChange('ionChange',numberInputname)" (ngInit)="numberinput.isValid=numberInputname.valid"></ion-input>
</div>












<!-- <label>{{numberinput.prompt_name}}</label>
<div class="input-group non-lov-input-group" (ngInit)="numberinput.isValid=numberInputname.valid">
    <ion-input type="number" [customMin]="numberinput.from_value" [customMax]="numberinput.to_value"
        maxlength="{{numberinput.item_size}}" placeholder="{{numberinput.tool_tip}}" id="{{numberinput.item_name}}"
        [(ngModel)]="numberinput.value"
        [readonly]="numberinput.item_enable_flag && (!(numberinput.item_enable_flag.indexOf(current_page_parameter.MODE)>-1)||(numberinput.item_enable_flag=='F'))"
        [required]="(current_page_parameter.MODE && (numberinput.data_required_flag && 
        (numberinput.data_required_flag.indexOf(current_page_parameter.MODE)>-1)) )
        ||numberinput.data_required_flag=='T' 
        ||numberinput.prompt_name[numberinput.prompt_name.length -1] =='*'" class="input-text lov-input input-number"
        #numberInputname="ngModel" name="{{numberinput.item_name}}"
        (ionChange)="onChange('ionChange',numberInputname);numberinput.isValid=numberInputname.valid; numberinput.touched=true;"
        (ionBlur)="numberinput.touched=true"></ion-input>
    <div *ngIf="numberinput.value" class="input-group-append">
        <button class="lov-btn border-left-0 border-right-0" ion-button icon-only small (click)="cleardata()">
            <ion-icon name="close"></ion-icon>
        </button>
    </div>
</div>
<div class="error" *ngIf="numberInputname.hasError('maxlength')"> {{numberinput.prompt_name}} max
    {{numberinput.item_size}} digit</div>
<div class="error" *ngIf="numberInputname.hasError('customMin')"> {{numberinput.prompt_name}} should not be less
    {{numberinput.from_value}}
</div>
<div class="error" *ngIf="numberInputname.hasError('customMax')"> {{numberinput.prompt_name}} should not be above
    {{numberinput.to_value}}</div>
<div class="error" *ngIf="numberInputname.hasError('required') && numberinput.touched"> Please Enter
    {{numberinput.prompt_name}}
</div>  -->


<!-- <label>{{numberinput.prompt_name}}</label>
<div>
    <ion-input type="number" [customMin]="numberinput.from_value" [customMax]="numberinput.to_value"
        maxlength="{{numberinput.item_size}}" placeholder="{{numberinput.tool_tip}}" id="{{numberinput.item_name}}"
        [(ngModel)]="numberinput.value" [readonly]="numberinput.item_enable_flag=='R'"
        [required]="numberinput.data_required_flag=='T' " class="input-text input-number" #numberInputname="ngModel"
        name="{{numberinput.item_name}}" (ionChange)="onChange('ionChange')"></ion-input>

    <div class="error" *ngIf="numberInputname.hasError('maxlength')"> {{numberinput.prompt_name}} max
        {{numberinput.item_size}} digit</div>
    <div class="error" *ngIf="numberInputname.hasError('customMin')"> {{numberinput.prompt_name}} should not be less
        {{numberinput.from_value}}
    </div>
    <div class="error" *ngIf="numberInputname.hasError('customMax')"> {{numberinput.prompt_name}} should not be above
        {{numberinput.to_value}}</div>
    <div class="error" *ngIf="numberInputname.hasError('required') && numberInputname.touched"> Please Enter
        {{numberinput.prompt_name}}
    </div>
</div> -->