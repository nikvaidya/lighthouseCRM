import { Component, OnInit, Input, Output, EventEmitter, ViewContainerRef } from '@angular/core';
import { GlobalObjectsService } from 'src/app/services/global-objects.service';
import { Device } from '@ionic-native/device/ngx';
import { BatteryStatus } from '@ionic-native/battery-status/ngx';
import { BackgroundService } from 'src/app/services/background.service';



@Component({
  selector: 'app-items',
  templateUrl: './items.component.html',
  styleUrls: ['./items.component.scss'],
})
export class ItemsComponent implements OnInit {
  @Input() item: any;
  @Input() frame_type: any;
  @Input() wscp: any;
  @Input() change_item_type: any;
  @Output() emitPass: EventEmitter<any> = new EventEmitter<any>();
  @Output() LHSOnChange: EventEmitter<any> = new EventEmitter<any>();
  @Input() itemData: any;
  @Output() emitfilterParam: EventEmitter<any> = new EventEmitter<any>();

  parentComponent;
  userDetails: any;

  constructor(private globalobject: GlobalObjectsService, private device: Device,
    private viewContainerRef: ViewContainerRef, private batteryStatus: BatteryStatus, private backgroundservices: BackgroundService) {
    this.userDetails = this.globalobject.getLocallData("userDetails");
  }

  getParentComponent() {

    this.parentComponent = this.viewContainerRef['_data'].componentView.component.viewContainerRef['_view'].component;
  }
  fiteredData(filterParam) {
    console.log(filterParam);
    this.emitfilterParam.emit(filterParam);

  }
  ngOnInit() {
    //  console.log(this.itemData);
    if (this.item.item_type == "TEXT-BAND4-3D") {
      this.globalobject.colorcount = this.globalobject.colorcount + 1;
      if (this.globalobject.colorcount > 4) {
        this.globalobject.colorcount = 1;
      }
    }

    if (this.item.item_type == "SUMMARY-CARD") {
      this.globalobject.countforsummarycard = this.globalobject.countforsummarycard + 1;
      if (this.globalobject.countforsummarycard > 4) {
        this.globalobject.countforsummarycard = 1;
      }
    }

    if (this.change_item_type) {
      if (this.change_item_type = 'item_filter_flag') {
        this.item.item_type = this.item.item_filter_flag;
      }
    }

    this.getParentComponent();
    if (this.item.display_setting_str) {
      if (typeof (this.item.display_setting_str) === 'string') {
        this.item.display_setting_str = JSON.parse(this.item.display_setting_str);
      }
      else {
      }
    }

    if (this.item.item_default_value) {
      var date = new Date();
      // if (this.item.item_type == "T") {
      if (this.item.item_default_value == "USER_CODE") {
        if (this.userDetails.login_user_flag == 'P') {
          this.item.value = "USER_PRT";
        }
        if (this.userDetails.login_user_flag == 'R') {
          this.item.value = "USER_DLR";
        } else if (this.userDetails.login_user_flag == 'E') {
          this.item.value = this.userDetails.user_code;
        }
      } else if (this.item.item_default_value == "ACC_CODE") {
        this.item.value = this.userDetails.acc_code;
      } else if (this.item.item_default_value == "DEVICE_ID") {
        if (this.device.uuid) {
          this.item.value = this.device.uuid;
        } else {
          this.item.value = "";
        }
      }
      else if (this.item.item_default_value == "ACC_YEAR") {
        this.item.value = this.userDetails.acc_year;
      } else if (this.item.item_default_value == "EMP_CODE") {
        this.item.value = this.userDetails.emp_code;
      } else if (this.item.item_default_value == "ENTITY_CODE") {
        this.item.value = this.userDetails.entity_code;
      } else if (this.item.item_default_value == "DIV_CODE") {
        this.item.value = this.userDetails.div_code;
      } else if (this.item.item_default_value == "PLSQL_L") {
        this.item.value = sessionStorage.getItem("PLSQL_L");
      } else if (this.item.item_default_value == "GEO_ORG_CODE") {
        this.item.value = this.userDetails.geo_org_code;
        // } else if (this.item.item_default_value == "DIV_CODE") {
        //   this.item.value = this.userDetails.division
      } else if (this.item.item_default_value == "LATITUDE") {
        this.item.value = this.backgroundservices.latitude;
      } else if (this.item.item_default_value == "LONGITUDE") {
        this.item.value = this.backgroundservices.longitude;
      } else if (this.item.item_default_value == "LOCATION") {
        if (!this.globalobject.addressgenerate) {
          this.globalobject
            .geoCoderLocation(this.backgroundservices.latitude, this.backgroundservices.longitude)
            .then(res => {
              this.item.value = res;
            });
        } else {
          this.item.value = this.globalobject.addressgenerate;
        }
      } else if (this.item.item_default_value == "SYSDATE") {
        let val:any;
        /* if (this.item.item_visible_flag == "T") { */
          // this.item.value = ("0" + date.getDate()).slice(-2)+ "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-" + date.getFullYear();
          let valD= date.getFullYear() + "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-" +
          ("0" + date.getDate()).slice(-2);
          this.item.value = this.globalobject.formatDate(valD, 'dd-MMM-yyyy');
        ///  this.item.value = date.getFullYear() + "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-" + ("0" + date.getDate()).slice(-2)
       /*  }
        if (this.item.item_visible_flag == "F") {
          this.item.value = ("0" + date.getDate()).slice(-2) + "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-" + date.getFullYear();
        } */


      } else if (this.item.item_default_value == "SYSTIME") {
        this.item.value = ("0" + date.getHours()).slice(-2) + ":" + ("0" + date.getMinutes()).slice(-2);
      } else if (this.item.item_default_value == "SYSDATETIME") {
        let valDT = date.getFullYear() + "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-" +
          ("0" + date.getDate()).slice(-2) + " " + ("0" + date.getHours()).slice(-2) + ":" + ("0" + date.getMinutes()).slice(-2) +":"  + ("0" + date.getSeconds()).slice(-2);
          this.item.value = this.globalobject.formatDate(valDT, "dd-MMM-yyyy HH:mm:ss");
      } else if(this.item.item_default_value == "BATTERY_STATUS"){
        const subscription = this.batteryStatus.onChange().subscribe(status => {
          this.item.value = status.level;
       });
       subscription.unsubscribe();

      }else {
        this.item.value = this.item.item_default_value;
      }
    }
  }

  itemClicked(event) {
    this.emitPass.emit(event);
  }

  itemValueChange(event) {
    this.LHSOnChange.emit(event);
  }

  model = [
    {
      name: 'Folder1',
      isSelect: true,
      children: [
        {
          name: 'Item1',
          isSelect: true,
          children: [
            {
              name: 'Child1',
            },
            {
              name: 'Child2',
              isSelect: false,
              children: [
                {
                  name: 'Child1',
                },
                {
                  name: 'Child2',
                }
              ]
            }
          ]
        },
        {
          name: 'Item2',
        }
      ]
    }, {
      name: 'Folder2',
      isSelect: true,
      children: [
        {
          name: 'Item1',
        },
        {
          name: 'Item2',
        }
      ]
    }, {
      name: 'Folder3',
      children: [
        {
          name: 'Item1',
        },
        {
          name: 'Item2',
        }
      ]
    }, {
      name: 'Folder4',
      children: [
        {
          name: 'Item1',
        },
        {
          name: 'Item2',
        }
      ]
    }, {
      name: 'Folder5',
      children: [
        {
          name: 'Item1',
        },
        {
          name: 'Item2.PDF',
        }
      ]
    }, {
      name: 'Folder6',
    }
  ];

  getParsedJson(json) {
    try {
      if (json) {

        return JSON.parse(json)

      } else {
        return {}
      }
    } catch (err) {
      if (typeof json == 'object') {
        return json;
      } else {
        return {}
      }
    }
  }

  ionViewWillLeave() {
    // this.modalCtrl.dismiss();
  }
}